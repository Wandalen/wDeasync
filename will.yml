about:
  name: wDeasync
  description: Turns async function into sync via JavaScript wrapper of Node event loop
  version: 0.1.20
  enabled: 1
  license: MIT
  native: 1
  npm.name: wdeasync
  author: Kostiantyn Wandalen <wanalen@01.school>
  keywords:
    - async
    - sync
    - sleep
    - async wrapper
  contributors:
    - Kostiantyn Wandalen <wanalen@01.school>
    - Volodymyr M. <volodymyr.migdal@gmail.com>
  interpreters:
    - njs >= 10.0.0
  npm.scripts:
    install: node-pre-gyp install --update-binary --fallback-to-build
    postinstall: node postinstall.js
    node-pre-gyp-build: node-pre-gyp configure && node-pre-gyp rebuild
    node-pre-gyp-package: node-pre-gyp package
    node-pre-gyp-github-release: node-pre-gyp-github publish --release
    test: node proto/wtools/amid/deasync.test
    quick-test: node proto/wtools/amid/deasync/QuickTest.ss
build:
  proto.export:
    criterion:
      content: proto
      export: 1
    steps:
      - 'step::proto.export'
  doc.export:
    criterion:
      content: doc
      export: 1
    steps:
      - 'step::doc.export'
  npm.export:
    criterion:
      content: npm
      export: 1
    steps:
      - 'step::npm.publish'
  export:
    criterion:
      default: 1
      export: 1
    steps:
      - 'build::proto.export'
  debug:
    criterion:
      default: 1
    steps:
      - clean.build.and.binding
      - node-gyp.build
  install:
    steps:
      - submodules.update
      - node-gyp.install
  compiled.debug:
    criterion:
      debug: debug
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  raw.release:
    criterion:
      debug: release
      raw: raw
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.raw
  release:
    criterion:
      debug: release
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  npm:
    criterion:
      debug: debug
      raw: raw
      content: npm
    steps:
      - npm.generate.*=1
  all:
    steps:
      - 'build::debug'
      - 'build::compiled.debug'
      - 'build::raw.release'
      - 'build::release'
      - 'build::npm'
path:
  repository: 'git+https:///github.com/Wandalen/wDeasync.git'
  origins:
    - 'git+https:///github.com/Wandalen/wDeasync.git'
    - 'npm:///wdeasync'
  bugtracker: 'https:///github.com/Wandalen/wDeasync/issues'
  in: .
  out: out
  temp:
    - '{path::out}/cpp'
    - '{path::build}'
    - package-lock.json
    - node_modules
    - build
    - binding
  proto: ./proto
  export: '{path::proto}/**'
  doc: ./doc
  js: proto
  cpp: cpp
  build: build
  binding: binding
  node-pre-gyp: node_modules/@mapbox/node-pre-gyp/bin/node-pre-gyp
  out.raw.debug:
    path: '{path::out}/debug'
    criterion:
      debug: debug
      raw: raw
      content: prime
  out.compiled.debug:
    path: '{path::out}/compiled.debug'
    criterion:
      debug: debug
      raw: compiled
      content: prime
  out.raw.release:
    path: '{path::out}/raw.release'
    criterion:
      debug: release
      raw: raw
      content: prime
  out.compiled.release:
    path: '{path::out}/release'
    criterion:
      debug: release
      raw: compiled
      content: prime
  entry.proto.no.tests:
    path: js/Main.ss
    criterion:
      tests: no.tests
  entry.proto.only.tests:
    path: proto/**/*.test.s
    criterion:
      tests: only.tests
  entry.out.raw.debug:
    path: '{path::out.*=1}/source/Main.ss'
    criterion:
      debug:
        - debug
        - release
      raw: raw
      content: prime
  entry.out.compiled.debug:
    path: '{path::out.*=}/source/Index.s'
    criterion:
      debug:
        - debug
        - release
      raw: compiled
      content: prime
  npm.proto.entry:
    - proto/wtools/amid/deasync/Main.ss
reflector:
  reflect.proto:
    inherit: predefined.*
    criterion:
      tests: no.tests
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      content: prime
    filePath:
      'path::proto': '{path::out.*=1}/source'
  reflect.cpp:
    inherit: predefined.*
    filePath:
      'path::cpp': '{path::out}/cpp'
  transpile.proto.raw:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.no.tests'
    criterion:
      raw: raw
      debug: release
      content: prime
    filePath:
      'path::proto': '{path::out.raw.release}'
  transpile.proto.no.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
    criterion:
      tests: no.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 0
      '**.test/**': 0
      'path::proto': '{path::out.*=1}/Main.s'
  transpile.proto.only.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
      external.before: '{path::out.*=1}/Main.s'
    criterion:
      tests: only.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 1
      'path::proto': '{path::out.*=1}/Tests.test.s'
step:
  proto.export:
    inherit: module.export
    export: 'path::export'
    tar: 0
    criterion:
      content: proto
  doc.export:
    inherit: module.export
    export: 'path::doc'
    tar: 0
    criterion:
      content: doc
  npm.export:
    inherit: module.export
    export: out.npm
    tar: 0
    criterion:
      content: npm
  npm.publish:
    shell: npm publish
  npm.generate:
    inherit: npm.generate
    entryPath: 'path::entry.out.*=1'
    packagePath: '{path::out.*=1}/package.json'
    filesPath: '{path::out.*=1}/source/**'
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
  clean.out.cpp:
    inherit: files.delete
    filePath: '{path::out}/cpp'
  clean.out.npm:
    inherit: files.delete
    filePath: 'path::out.*=1'
    criterion:
      debug: debug
      raw: compiled
      tests: no.tests
      content: npm
  clean.build.and.binding:
    inherit: files.delete
    filePath:
      - '{path::build}'
      - '{path::binding}'
  tst.proto:
    shell: 'tst {path::proto}'
    criterion:
      content: proto
  tst.debug:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: debug
  tst.release:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: release
  node-gyp.build:
    currentPath: 'path::in'
    shell: 'node {path::node-pre-gyp} configure && node {path::node-pre-gyp} rebuild'
  node-gyp.install:
    currentPath: 'path::in'
    shell: npm run-script node-pre-gyp-install
submodule:
  bindings:
    path: 'npm:///bindings#1.5.0'
    enabled: 0
    criterion:
      development: 0
  node-addon-api:
    path: 'npm:///node-addon-api#1.7.1'
    enabled: 0
    criterion:
      development: 0
  node-gyp:
    path: 'npm:///node-gyp'
    enabled: 0
    criterion:
      development: 0
  '@mapbox':
    path: 'npm:///@mapbox/node-pre-gyp#1.0.2'
    enabled: 0
    criterion:
      development: 0
  node-pre-gyp-github:
    path: 'npm:///node-pre-gyp-github'
    enabled: 0
    criterion:
      development: 1
